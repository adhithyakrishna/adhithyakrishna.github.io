<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Adhithyakrishna on ZDoc</title><link>https://adhithyakrishna.github.io/</link><description>Recent content in Adhithyakrishna on ZDoc</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy;{year}, All Rights Reserved</copyright><lastBuildDate>Sun, 26 Jan 2020 04:15:05 +0900</lastBuildDate><atom:link href="https://adhithyakrishna.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Most Common word</title><link>https://adhithyakrishna.github.io/articles/leetcode/leetcode819/</link><pubDate>Wed, 13 Jan 2021 15:01:46 +0000</pubDate><guid>https://adhithyakrishna.github.io/articles/leetcode/leetcode819/</guid><description>Solution for leetcode 819 Golang Java Golang solution 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 func mostCommonWord(paragraph string, banned []string) string { var sb strings.Builder bannedMap := make(map[string]bool) for _, data := range banned { bannedMap[data] = true } wordCounts := make(map[string]int) var max string for _, ch := range paragraph { if string(ch) == &amp;#34; &amp;#34; || string(ch) == &amp;#34;,&amp;#34; { if sb.</description></item><item><title>Squares of a sorted array</title><link>https://adhithyakrishna.github.io/articles/leetcode/leetcode977/</link><pubDate>Wed, 13 Jan 2021 03:30:51 +0000</pubDate><guid>https://adhithyakrishna.github.io/articles/leetcode/leetcode977/</guid><description>Solution for leetcode 977 Golang Java Golang solution 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 func sortedSquares(nums []int) []int { result := make([]int, len(nums)) start := 0 end := len(nums)-1 index := len(nums)-1 for start &amp;lt;= end { if(abs(nums[start]) &amp;gt;= abs(nums[end])) { result[index] = nums[start] * nums[start] start++ } else { result[index] = nums[end] * nums[end] end-- } index-- } return result } func abs(x int) int { if(x &amp;lt; 0) { return x * -1; } return x } Java solution 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 class Solution { public int[] sortedSquares(int[] nums) { int[] result = new int[nums.</description></item><item><title>Dependency injection in golang</title><link>https://adhithyakrishna.github.io/articles/golang/dependencyinjection/</link><pubDate>Mon, 01 Feb 2021 16:25:16 -0500</pubDate><guid>https://adhithyakrishna.github.io/articles/golang/dependencyinjection/</guid><description>This post was inspired by an awesome tech talk by Florian Patan at GopherCon UK in 2018 where he goes over creating a goservice in 30 minutes. The interesting take away from the talk was the use of dependency injection to insert a logger instance into the handler.
My aim for this article is to dissect dependency injection into smaller chunks to understand how it works.
The initial code for the project is given below.</description></item><item><title>Emoji Support</title><link>https://adhithyakrishna.github.io/blog/emoji-support/</link><pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate><guid>https://adhithyakrishna.github.io/blog/emoji-support/</guid><description>&lt;p>Lorem est tota propiore conpellat pectoribus de&lt;br />
pectora summo. Redit teque digerit hominumque toris verebor lumina non cervice&lt;br />
subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc&lt;br />
caluere tempus&lt;/p></description></item></channel></rss>