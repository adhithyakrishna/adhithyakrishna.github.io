<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kubernetes for absolute beginners on Akrishna</title><link>https://adhithyakrishna.github.io/notes/k8s_for_absolute_beginners/</link><description>Recent content in Kubernetes for absolute beginners on Akrishna</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy;{year}, All Rights Reserved</copyright><lastBuildDate>Mon, 01 Feb 2021 21:23:38 +0000</lastBuildDate><atom:link href="https://adhithyakrishna.github.io/notes/k8s_for_absolute_beginners/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>https://adhithyakrishna.github.io/notes/k8s_for_absolute_beginners/introduction/</link><pubDate>Sun, 23 Oct 2022 15:35:28 -0700</pubDate><guid>https://adhithyakrishna.github.io/notes/k8s_for_absolute_beginners/introduction/</guid><description>This notes is for the course Kuberenetes for absolute beginners
Introduction Container orchestration system = Container + Orchestration
What are containers Containers have their own processes, network and mounts Multiple containers can share the underlying operating system kernel. Docker (most popular container technology).
Problems before containers Application component and services being incompatible with underlying OS. Compatibility between services, libraries and dependencies on the OS. Compatability checks had to be make during every component upgrade AKA matrix from hell.</description></item><item><title>Kubernetes architecture</title><link>https://adhithyakrishna.github.io/notes/k8s_for_absolute_beginners/k8s_architecture/</link><pubDate>Sun, 23 Oct 2022 15:35:28 -0700</pubDate><guid>https://adhithyakrishna.github.io/notes/k8s_for_absolute_beginners/k8s_architecture/</guid><description>This notes is for the course Kuberenetes for absolute beginners
Container orchestration Kubernetes is a Container Orchestration technology. Docker has its own container orchestraction - docker swarm. There is also MESOS from Apache.
The process of automatically deploying and managing containers (scaling up when load increases and scaling down when load decreases) is known as Container Orchestration.
Advantages of container orchestration
Application is highly available, since there are multiple instances of the application running on different nodes.</description></item></channel></rss>