<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kubernetes for absolute beginners on Akrishna</title><link>https://adhithyakrishna.github.io/tech/k8s_for_absolute_beginners/</link><description>Recent content in Kubernetes for absolute beginners on Akrishna</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy;{year}, All Rights Reserved</copyright><lastBuildDate>Mon, 01 Feb 2021 21:23:38 +0000</lastBuildDate><atom:link href="https://adhithyakrishna.github.io/tech/k8s_for_absolute_beginners/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>https://adhithyakrishna.github.io/tech/k8s_for_absolute_beginners/introduction/</link><pubDate>Sun, 23 Oct 2022 15:35:28 -0700</pubDate><guid>https://adhithyakrishna.github.io/tech/k8s_for_absolute_beginners/introduction/</guid><description>This notes is for the course Kuberenetes for absolute beginners
Introduction Container orchestration system = Container + Orchestration
What are containers Containers have their own processes, network and mounts Multiple containers can share the underlying operating system kernel. Docker (most popular container technology).
Problems before containers Application component and services being incompatible with underlying OS. Compatibility between services, libraries and dependencies on the OS. Compatability checks had to be make during every component upgrade AKA matrix from hell.</description></item><item><title>Kubernetes architecture</title><link>https://adhithyakrishna.github.io/tech/k8s_for_absolute_beginners/k8s_architecture/</link><pubDate>Sun, 23 Oct 2022 15:35:28 -0700</pubDate><guid>https://adhithyakrishna.github.io/tech/k8s_for_absolute_beginners/k8s_architecture/</guid><description>This notes is for the course Kuberenetes for absolute beginners
Container orchestration Kubernetes is a Container Orchestration technology. Docker has its own container orchestraction - docker swarm. There is also MESOS from Apache.
The process of automatically deploying and managing containers (scaling up when load increases and scaling down when load decreases) is known as Container Orchestration.
Advantages of container orchestration
Application is highly available, since there are multiple instances of the application running on different nodes.</description></item><item><title>Yaml Introduction</title><link>https://adhithyakrishna.github.io/tech/k8s_for_absolute_beginners/yaml_introduction/</link><pubDate>Tue, 01 Nov 2022 12:33:52 -0700</pubDate><guid>https://adhithyakrishna.github.io/tech/k8s_for_absolute_beginners/yaml_introduction/</guid><description>This notes is for the course Kuberenetes for absolute beginners
Yaml introduction According to yaml.org, &amp;ldquo;YAML is a human-friendly, data serialization standard for all programming languages.&amp;quot;
Yaml is used to create kubernetes configurations
Structure of YAML file Key Value Pair The basic type of entry in a YAML file is of a key value pair. After the Key and colon there is a space and then the value.</description></item><item><title>Yaml for Kubernetes</title><link>https://adhithyakrishna.github.io/tech/k8s_for_absolute_beginners/yaml_for_k8s/</link><pubDate>Tue, 01 Nov 2022 12:41:20 -0700</pubDate><guid>https://adhithyakrishna.github.io/tech/k8s_for_absolute_beginners/yaml_for_k8s/</guid><description>This notes is for the course Kuberenetes for absolute beginners
Kubernetes definition file A Kubernetes definition file always contains 4 top level fields. These are required fields
apiVersion: kind: metadata: . . . spec: apiVersion - Version of k8s API kind - type of object (pod, replicaset, service, deployment) metadata - data about the object (name and label), it is in the form of a dictionary. Here name is a string value and labels is a dictionary.</description></item><item><title>Kubernetes controllers</title><link>https://adhithyakrishna.github.io/tech/k8s_for_absolute_beginners/k8s_controllers/</link><pubDate>Thu, 03 Nov 2022 23:45:59 -0700</pubDate><guid>https://adhithyakrishna.github.io/tech/k8s_for_absolute_beginners/k8s_controllers/</guid><description>This notes is for the course Kuberenetes for absolute beginners
Replication controller Replication controller helps us run multiple instance of a pod in kubernetes cluster, thus providing high availability. Replication controller is capable of ensuring that the specified number of pods are running at all times. It is also capable of load balancing betweening multiple pods to share the loads. It can load balance pods and can do it when pods are in different nodes as well.</description></item><item><title>Kubernetes services</title><link>https://adhithyakrishna.github.io/tech/k8s_for_absolute_beginners/k8s_services/</link><pubDate>Sat, 05 Nov 2022 19:10:37 -0700</pubDate><guid>https://adhithyakrishna.github.io/tech/k8s_for_absolute_beginners/k8s_services/</guid><description>This notes is for the course Kuberenetes for absolute beginners
Kubernetes service enable communication between various components within or ourside of the application. Kubernetes Services helps us connect applications with other applications or users.
Services enable connectivity between the group of pods. For example front-end to the users, connection between the frontend and backend processes and backend to to external data source.
Services enable Loose coupling between microservices in our application.</description></item><item><title>Demo - Voting application 1</title><link>https://adhithyakrishna.github.io/tech/k8s_for_absolute_beginners/k8s_pods_demo/</link><pubDate>Fri, 11 Nov 2022 11:08:38 -0800</pubDate><guid>https://adhithyakrishna.github.io/tech/k8s_for_absolute_beginners/k8s_pods_demo/</guid><description>This notes is for the course Kuberenetes for absolute beginners
Application flow K8s Pods demo: https://www.udemy.com/course/learn-kubernetes/ Voting application We create pods and expose the container port. Please note that all the docker images are pre-built and this demo is to understand how different microservices communicate with each other through k8s services.
Create a definition for pod voting-app-pod.yml
apiVersion: v1 kind: Pod metadata: name: voting-app-pod labels: name: voting-app-pod app: demo-voting-app spec: containers: - name: voting-app image: dockersamples/examplevotingapp_vote imagePullPolicy: IfNotPresent ports: - containerPort: 80 restartPolicy: Always Create a Loadbalancer service to expose the application to external world voting-app-service.</description></item></channel></rss>