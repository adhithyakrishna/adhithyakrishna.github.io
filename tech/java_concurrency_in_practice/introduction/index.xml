<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Akrishna</title><link>https://adhithyakrishna.github.io/tech/java_concurrency_in_practice/introduction/</link><description>Recent content in Introduction on Akrishna</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy;{year}, All Rights Reserved</copyright><lastBuildDate>Fri, 11 Nov 2022 12:01:27 -0800</lastBuildDate><atom:link href="https://adhithyakrishna.github.io/tech/java_concurrency_in_practice/introduction/index.xml" rel="self" type="application/rss+xml"/><item><title>Ch01 - Introduction</title><link>https://adhithyakrishna.github.io/tech/java_concurrency_in_practice/introduction/introduction/</link><pubDate>Fri, 28 Feb 2020 10:08:56 +0900</pubDate><guid>https://adhithyakrishna.github.io/tech/java_concurrency_in_practice/introduction/introduction/</guid><description>Contains Notes for the book Java concurrency in practice - https://jcip.net/)
Running a single program at a time was inefficient use of expensive and scarce computer resources
Processes Processes are isolated, independently executing programs to which operating system allocates resources such as memory, file handles and security credentials.
Processes communicate with one another through a variety of coarse-grained communication mechanism: sockets, signal handlers, shared memory, semaphores and fils.</description></item><item><title>Ch02 - Benefits of Threads</title><link>https://adhithyakrishna.github.io/tech/java_concurrency_in_practice/introduction/benefits_of_threads/</link><pubDate>Sun, 13 Nov 2022 14:50:54 -0800</pubDate><guid>https://adhithyakrishna.github.io/tech/java_concurrency_in_practice/introduction/benefits_of_threads/</guid><description>Contains Notes for the book Java concurrency in practice - https://jcip.net/)
Benefits of threads Proper utilization of thread can
Reduce development and maintenance cost. Improve the performance of complex applications. Threads are useful in GUI applications for improving the responsiveness of the user interface. In server applications, threads help in improving the resource utilzation and throughput.
Since the basic unit of scheduling is the thread. A single threaded program can run on at most one processor at a time.</description></item><item><title>Ch03 - Risks of threads</title><link>https://adhithyakrishna.github.io/tech/java_concurrency_in_practice/introduction/risks_of_threads/</link><pubDate>Wed, 16 Nov 2022 11:51:25 -0800</pubDate><guid>https://adhithyakrishna.github.io/tech/java_concurrency_in_practice/introduction/risks_of_threads/</guid><description>Contains Notes for the book Java concurrency in practice - https://jcip.net/)
In the absence of synchronization, the ordering of operations in multiple threads is unpredictable.
Safety Hazards 1 2 3 4 5 6 7 public class UnsafeSequence { private int value; /** Returns a unique value. */ public int getNext() { return value++; } } In the above example,value++ is three seperate operations.
Read the value Add one to it Wrie the new value.</description></item></channel></rss>