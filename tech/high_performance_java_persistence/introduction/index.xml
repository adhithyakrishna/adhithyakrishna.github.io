<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Akrishna</title><link>https://adhithyakrishna.github.io/tech/high_performance_java_persistence/introduction/</link><description>Recent content in Introduction on Akrishna</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy;{year}, All Rights Reserved</copyright><atom:link href="https://adhithyakrishna.github.io/tech/high_performance_java_persistence/introduction/index.xml" rel="self" type="application/rss+xml"/><item><title>Preface</title><link>https://adhithyakrishna.github.io/tech/high_performance_java_persistence/introduction/introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://adhithyakrishna.github.io/tech/high_performance_java_persistence/introduction/introduction/</guid><description>This notes is for the book - High performance java persistence
More than half of the application performance bottlenecks originate in the database
To get the most out of a persistence layer, the data access logic must resonate with underlying database system.
High performance java persistence: Data access skill stack The database server and the connectivity layer Getting familiar with SQL standard and database specific feature can make the difference.</description></item><item><title>Performance and Scaling</title><link>https://adhithyakrishna.github.io/tech/high_performance_java_persistence/introduction/performance_and_scaling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://adhithyakrishna.github.io/tech/high_performance_java_persistence/introduction/performance_and_scaling/</guid><description>This notes is for the book - High performance java persistence
An enterprise application needs to store and retrieve as much data and as fast as possible. In application performance management, the two most important metrics are,
response time throughput The lower the response time, the more responsive the application becomes. Scaling is about maintaining low latencies while the system load increases.
Response time is measure of performance.</description></item></channel></rss>